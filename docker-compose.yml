version: '3.9'

services:

  db:
    env_file:
      - .env
    container_name: pg_db
    image: postgres:15.0
    restart: always
    volumes:
      - ./init-multi-postgres-databases.sh:/docker-entrypoint-initdb.d/init-multi-postgres-databases.sh
    expose:
      - 5432
#    networks:
#      - myapp

  pgadmin:
    env_file:
      - .env
    container_name: pgadmin
    image: dpage/pgadmin4
#    networks:
#      - myapp

  gpt:
    env_file:
      - .env
    container_name: gpt
    image: meacronics/skills_guide_gpt:latest
    restart: always
    expose:
      - 7000
#    networks:
#      - myapp

  parser:
    env_file:
      - .env
    container_name: parser
    command: bash -c "flask create_db && gunicorn --bind 0.0.0.0:5000 app:app"
    image: meacronics/skills_guide_parser:latest
    restart: always
    expose:
      - 5000
    depends_on:
      - db
#    networks:
#      - myapp

  telegram:
    env_file:
      - .env
    container_name: telegram
    image: meacronics/skills_guide_telegram:latest
    restart: always
    expose:
      - 6000
    depends_on:
      - parser
#    networks:
#      - myapp

  site:
    env_file:
      - .env
    container_name: site
    image: meacronics/skills_guide_site:latest
    restart: always
    expose:
      - 8000
    depends_on:
      - parser
#    networks:
#      - myapp

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      - db
      - pgadmin
      - parser
      - site
#    networks:
#      - myapp

  certbot:
    image: certbot/certbot:latest
    depends_on:
      - nginx
    container_name: certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
#    networks:
#      - myapp
#volumes:
#  etc-letsencrypt:
#  default_site:
#
#networks:
#  myapp:
#    driver: bridge
